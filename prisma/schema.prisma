datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/// Always after the prisma-client-js generator
generator json {
  provider = "prisma-json-types-generator"
  // namespace = "PrismaJson"
  // clientOutput = "<finds it automatically>"
  // (./ -> relative to schema, or an importable path to require() it)
}

model Spot {
  id                String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  source            String
  sourceId          String?
  name              String?
  /// [LatLngLiteral]
  coords            Json
  /// [IPov]
  pov               Json?
  /// [IPov]
  suggestedPovs     Json[] @default([])
  votesToRemove     Int @default(0)
  guesses           Guess[]
  tags              String[] @default([])
  metadata          Json?
}

model Guess {
  id                String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt         DateTime @default(now())
  /// [LatLngLiteral]
  coords            Json
  /// [IPov]
  pov               Json
  distanceFromSpot  Float
  score             Int
  spot              Spot @relation(fields: [spotId], references: [id]) 
  spotId            String @db.Uuid
  user              User? @relation(fields: [userId], references: [id]) 
  userId            String? @db.Uuid
}

model User {
  id                String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  name              String
  guesses           Guess[]
}