datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Spot {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String?
  address   String?
  comments  String?
  source    String
  sourceId  String?
  tags      String[] @default([])
  pov       Pov      @relation(fields: [povId], references: [id])
  povId     String   @unique @db.Uuid
  guesses   Guess[]
}

model Pov {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lat       Float
  long      Float
  heading   Float
  pitch     Float
  zoom      Float
  spot      Spot?
  guess     Guess[]
}

model Guess {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt        DateTime @default(now())
  distanceFromSpot Float
  score            Int
  pov              Pov      @relation(fields: [povId], references: [id])
  povId            String   @db.Uuid
  spot             Spot?    @relation(fields: [spotId], references: [id])
  spotId           String   @db.Uuid
  game             Game?    @relation(fields: [gameId], references: [id])
  gameId           String?  @db.Uuid
}

model Game {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  score     Int
  gameType  String?
  spotType  String
  // user      User?    @relation(fields: [userId], references: [id])
  // userId    String?  @db.Uuid
  user      String
  guesses   Guess[]
}

// model User {
//   id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   name      String
//   games     Game[]
// }
